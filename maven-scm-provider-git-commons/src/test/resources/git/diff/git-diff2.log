diff --git a/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/add/GitAddCommand.java b/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/add/GitAddCommand.java
index 0dcaec9..493bde9 100644
--- a/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/add/GitAddCommand.java
+++ b/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/add/GitAddCommand.java
@@ -22,6 +22,7 @@ package org.apache.maven.scm.provider.git.gitexe.command.add;
 import org.apache.maven.scm.ScmException;
 import org.apache.maven.scm.ScmFile;
 import org.apache.maven.scm.ScmFileSet;
+import org.apache.maven.scm.ScmFileStatus;
 import org.apache.maven.scm.ScmResult;
 import org.apache.maven.scm.command.add.AbstractAddCommand;
 import org.apache.maven.scm.command.add.AddScmResult;
@@ -42,7 +43,9 @@ import java.util.List;
 /**
  * @author <a href="mailto:struberg@yahoo.de">Mark Struberg</a>
  */
-public class GitAddCommand extends AbstractAddCommand implements GitCommand
+public class GitAddCommand
+    extends AbstractAddCommand
+    implements GitCommand
 {
     protected ScmResult executeAddCommand( ScmProviderRepository repo, ScmFileSet fileSet, String message,
                                            boolean binary )
@@ -68,7 +71,7 @@ public class GitAddCommand extends AbstractAddCommand implements GitCommand
             return new AddScmResult( cl.toString(), "The git-add command failed.", stderr.getOutput(), false );
         }
         
-        // git-add doesn't show single files, but only summary :/
+        // git-commit doesn't show single files, but only summary :/
         // so we must run git-status and consume the output
         // borrow a few things from the git-status command
         Commandline clStatus = GitStatusCommand.createCommandLine( repository, fileSet );
@@ -104,8 +107,15 @@ public class GitAddCommand extends AbstractAddCommand implements GitCommand
     public static Commandline createCommandLine( File workingDirectory, List/*File*/ files )
         throws ScmException
     {
+        // Base command line doesn't make sense here - username/password not needed, and non-interactive is not valid
+
         Commandline cl = GitCommandLineUtils.getBaseGitCommandLine( workingDirectory, "add" );
 
+        cl.setWorkingDirectory( workingDirectory.getAbsolutePath() );
+
+        // verbosity needed for consumer
+        cl.createArgument().setValue( "-v" );
+        
         GitCommandLineUtils.addTarget( cl, files );
 
         return cl;
diff --git a/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/branch/GitBranchCommand.java b/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/branch/GitBranchCommand.java
index c70dbe0..d0f3bbc 100644
--- a/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/branch/GitBranchCommand.java
+++ b/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/branch/GitBranchCommand.java
@@ -26,14 +26,10 @@ import org.apache.maven.scm.ScmFileStatus;
 import org.apache.maven.scm.ScmResult;
 import org.apache.maven.scm.command.branch.AbstractBranchCommand;
 import org.apache.maven.scm.command.branch.BranchScmResult;
-import org.apache.maven.scm.command.checkin.CheckInScmResult;
-import org.apache.maven.scm.command.checkout.CheckOutScmResult;
 import org.apache.maven.scm.provider.ScmProviderRepository;
 import org.apache.maven.scm.provider.git.command.GitCommand;
 import org.apache.maven.scm.provider.git.repository.GitScmProviderRepository;
 import org.apache.maven.scm.provider.git.gitexe.command.GitCommandLineUtils;
-import org.apache.maven.scm.provider.git.gitexe.command.list.GitListCommand;
-import org.apache.maven.scm.provider.git.gitexe.command.list.GitListConsumer;
 import org.codehaus.plexus.util.FileUtils;
 import org.codehaus.plexus.util.StringUtils;
 import org.codehaus.plexus.util.cli.CommandLineUtils;
@@ -46,9 +42,13 @@ import java.util.Iterator;
 import java.util.List;
 
 /**
- * @author <a href="mailto:struberg@yahoo.de">Mark Struberg</a>
+ * @author <a href="mailto:evenisse@apache.org">Emmanuel Venisse</a>
+ * @version $Id: GitBranchCommand.java 531990 2007-04-24 15:55:06Z evenisse $
+ * @todo since this is just a copy, use that instead.
  */
-public class GitBranchCommand extends AbstractBranchCommand implements GitCommand
+public class GitBranchCommand
+    extends AbstractBranchCommand
+    implements GitCommand
 {
     public ScmResult executeBranchCommand( ScmProviderRepository repo, ScmFileSet fileSet, String branch,
                                            String message )
@@ -69,38 +69,38 @@ public class GitBranchCommand extends AbstractBranchCommand implements GitComman
         Commandline cl = createCommandLine( repository, fileSet.getBasedir(), branch );
 
         CommandLineUtils.StringStreamConsumer stdout = new CommandLineUtils.StringStreamConsumer();
+
         CommandLineUtils.StringStreamConsumer stderr = new CommandLineUtils.StringStreamConsumer();
+
         int exitCode;
 
         exitCode = GitCommandLineUtils.execute( cl, stdout, stderr, getLogger() );
         if ( exitCode != 0 )
         {
-            return new BranchScmResult( cl.toString(), "The git-branch command failed.", stderr.getOutput(), false );
+            return new BranchScmResult( cl.toString(), "The git branch command failed.", stderr.getOutput(), false );
         }
-        
-        // and now push the branch to the origin repository
-        Commandline clPush = createPushCommandLine( repository, fileSet, branch );
-        
-        exitCode = GitCommandLineUtils.execute( clPush, stdout, stderr, getLogger() );
-        if ( exitCode != 0 )
+
+        List fileList = new ArrayList();
+
+        List files = null;
+
+        try
         {
-            return new BranchScmResult( clPush.toString(), "The git-push command failed.", stderr.getOutput(), false );
+            files = FileUtils.getFiles( fileSet.getBasedir(), "**", "**/.git/**", false );
+        }
+        catch ( IOException e )
+        {
+            throw new ScmException( "Error while executing command.", e );
         }
 
-        // as last action we search for the branched files
-        GitListConsumer listConsumer = new GitListConsumer( getLogger()
-        		                                          , fileSet.getBasedir()
-        		                                          , ScmFileStatus.TAGGED);
-
-        Commandline clList = GitListCommand.createCommandLine( repository, fileSet.getBasedir() );
-        
-        exitCode = GitCommandLineUtils.execute( clList, listConsumer, stderr, getLogger() );
-        if ( exitCode != 0 )
+        for ( Iterator i = files.iterator(); i.hasNext(); )
         {
-            return new BranchScmResult( clList.toString(), "The git-ls-files command failed.", stderr.getOutput(), false );
+            File f = (File) i.next();
+
+            fileList.add( new ScmFile( f.getPath(), ScmFileStatus.TAGGED ) );
         }
 
-        return new BranchScmResult( cl.toString(), listConsumer.getListedFiles() );
+        return new BranchScmResult( cl.toString(), fileList );
     }
 
     // ----------------------------------------------------------------------
@@ -116,17 +116,4 @@ public class GitBranchCommand extends AbstractBranchCommand implements GitComman
 
         return cl;
     }
-    
-    public static Commandline createPushCommandLine( GitScmProviderRepository repository, ScmFileSet fileSet,
-                                                     String branch )
-	throws ScmException
-	{
-		Commandline cl = GitCommandLineUtils.getBaseGitCommandLine( fileSet.getBasedir(), "push");
-		
-		cl.createArgument().setValue( "origin" );
-		cl.createArgument().setValue( branch );
-		
-		return cl;
-	}
-
 }
diff --git a/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/checkout/GitCheckOutCommand.java b/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/checkout/GitCheckOutCommand.java
index 44096be..ee4f482 100644
--- a/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/checkout/GitCheckOutCommand.java
+++ b/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/checkout/GitCheckOutCommand.java
@@ -21,7 +21,6 @@ package org.apache.maven.scm.provider.git.gitexe.command.checkout;
 
 import org.apache.maven.scm.ScmException;
 import org.apache.maven.scm.ScmFileSet;
-import org.apache.maven.scm.ScmFileStatus;
 import org.apache.maven.scm.ScmRevision;
 import org.apache.maven.scm.ScmVersion;
 import org.apache.maven.scm.command.checkout.AbstractCheckOutCommand;
@@ -68,9 +67,20 @@ public class GitCheckOutCommand extends AbstractCheckOutCommand implements GitCo
 
         CommandLineUtils.StringStreamConsumer stderr = new CommandLineUtils.StringStreamConsumer();
         
-
-        if ( !fileSet.getBasedir().exists() || 
-             !( new File( fileSet.getBasedir(), ".git" ).exists() ) )
+        
+        if ( fileSet.getBasedir().exists() && 
+             new File( fileSet.getBasedir(), ".git" ).exists() ) 
+        {
+            // git repo exists, so we must git-pull the changes
+            Commandline clPull = createPullCommand( repository, fileSet.getBasedir(), version );
+            
+            exitCode = GitCommandLineUtils.execute( clPull, stdout, stderr, getLogger() );
+            if ( exitCode != 0 )
+            {
+                return new CheckOutScmResult( clPull.toString(), "The git-pull command failed.", stderr.getOutput(), false );
+            }
+        }
+        else 
         {
             if ( fileSet.getBasedir().exists() ) 
             {
@@ -87,19 +97,6 @@ public class GitCheckOutCommand extends AbstractCheckOutCommand implements GitCo
                 return new CheckOutScmResult( clClone.toString(), "The git-clone command failed.", stderr.getOutput(), false );
             }
         }
-
-        if ( fileSet.getBasedir().exists() && 
-             new File( fileSet.getBasedir(), ".git" ).exists() ) 
-        {
-            // git repo exists, so we must git-pull the changes
-            Commandline clPull = createPullCommand( repository, fileSet.getBasedir(), version );
-            
-            exitCode = GitCommandLineUtils.execute( clPull, stdout, stderr, getLogger() );
-            if ( exitCode != 0 )
-            {
-                return new CheckOutScmResult( clPull.toString(), "The git-pull command failed.", stderr.getOutput(), false );
-            }
-        }
         
         // and now lets do the git-checkout itself
         Commandline cl = createCommandLine( repository, fileSet.getBasedir(), version );
@@ -111,9 +108,7 @@ public class GitCheckOutCommand extends AbstractCheckOutCommand implements GitCo
         }
 
         // and now search for the files
-        GitListConsumer listConsumer = new GitListConsumer( getLogger()
-        		                                          , fileSet.getBasedir()
-        		                                          , ScmFileStatus.CHECKED_IN);
+        GitListConsumer listConsumer = new GitListConsumer( getLogger(), fileSet.getBasedir() );
 
         Commandline clList = GitListCommand.createCommandLine( repository, fileSet.getBasedir() );
         
@@ -170,7 +165,10 @@ public class GitCheckOutCommand extends AbstractCheckOutCommand implements GitCo
         
         if ( version != null && StringUtils.isNotEmpty( version.getName() ) )
         {
-            cl.createArgument().setValue( version.getName() + ":" + version.getName() );
+            if ( version instanceof ScmRevision )
+            {
+                cl.createArgument().setValue( version.getName() );
+            }
         }
         return cl;
     }    
diff --git a/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/list/GitListCommand.java b/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/list/GitListCommand.java
index 20f65c9..91d13c2 100644
--- a/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/list/GitListCommand.java
+++ b/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/list/GitListCommand.java
@@ -21,7 +21,6 @@ package org.apache.maven.scm.provider.git.gitexe.command.list;
 
 import org.apache.maven.scm.ScmException;
 import org.apache.maven.scm.ScmFileSet;
-import org.apache.maven.scm.ScmFileStatus;
 import org.apache.maven.scm.ScmVersion;
 import org.apache.maven.scm.command.list.AbstractListCommand;
 import org.apache.maven.scm.command.list.ListScmResult;
@@ -56,9 +55,7 @@ public class GitListCommand extends AbstractListCommand implements GitCommand
         int exitCode;
 
         CommandLineUtils.StringStreamConsumer stderr = new CommandLineUtils.StringStreamConsumer();
-        GitListConsumer consumer = new GitListConsumer( getLogger()
-        		                                      , fileSet.getBasedir().getParentFile()
-        		                                      , ScmFileStatus.CHECKED_IN );
+        GitListConsumer consumer = new GitListConsumer( getLogger(), fileSet.getBasedir().getParentFile() );
         
         Commandline cl = createCommandLine( repository, fileSet.getBasedir() );
 
diff --git a/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/list/GitListConsumer.java b/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/list/GitListConsumer.java
index 2060e58..790575d 100644
--- a/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/list/GitListConsumer.java
+++ b/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/list/GitListConsumer.java
@@ -33,25 +33,17 @@ import java.util.List;
 public class GitListConsumer
     extends AbstractFileCheckingConsumer
 {
-	private ScmFileStatus fileStatus; 
-
-	/**
-	 * @param logger
-	 * @param workingDirectory
-	 * @param fileStatus will be used for each file found
-	 */
-    public GitListConsumer( ScmLogger logger, File workingDirectory, ScmFileStatus fileStatus )
+    public GitListConsumer( ScmLogger logger, File workingDirectory )
     {
         super( logger, workingDirectory );
-        
-        this.fileStatus = fileStatus;
     }
 
     protected void parseLine( String line )
     {
         String file = line;
+        ScmFileStatus status = ScmFileStatus.CHECKED_IN;
 
-        addFile( new ScmFile( file, fileStatus ) );
+        addFile( new ScmFile( file, status ) );
     }
 
     // ----------------------------------------------------------------------
diff --git a/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/remove/GitRemoveCommand.java b/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/remove/GitRemoveCommand.java
index 8e263b8..e60f1d3 100644
--- a/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/remove/GitRemoveCommand.java
+++ b/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/remove/GitRemoveCommand.java
@@ -27,7 +27,6 @@ import org.apache.maven.scm.command.remove.RemoveScmResult;
 import org.apache.maven.scm.provider.ScmProviderRepository;
 import org.apache.maven.scm.provider.git.command.GitCommand;
 import org.apache.maven.scm.provider.git.gitexe.command.GitCommandLineUtils;
-import org.apache.maven.scm.provider.git.repository.GitScmProviderRepository;
 import org.codehaus.plexus.util.cli.CommandLineUtils;
 import org.codehaus.plexus.util.cli.Commandline;
 
@@ -35,22 +34,24 @@ import java.io.File;
 import java.util.List;
 
 /**
- * @author <a href="mailto:struberg@yahoo.de">Mark Struberg</a>
+ * @author <a href="mailto:brett@apache.org">Brett Porter</a>
+ * @version $Id: GitRemoveCommand.java 538940 2007-05-17 14:27:28Z evenisse $
+ * TODO
  */
-public class GitRemoveCommand extends AbstractRemoveCommand implements GitCommand
+public class GitRemoveCommand
+    extends AbstractRemoveCommand
+    implements GitCommand
 {
-    protected ScmResult executeRemoveCommand( ScmProviderRepository repo, ScmFileSet fileSet, String message )
+    protected ScmResult executeRemoveCommand( ScmProviderRepository repository, ScmFileSet fileSet, String message )
         throws ScmException
     {
-        GitScmProviderRepository repository = (GitScmProviderRepository) repo;
-
         if ( fileSet.getFileList().isEmpty() )
         {
             throw new ScmException( "You must provide at least one file/directory to remove" );
         }
 
         Commandline cl = createCommandLine( fileSet.getBasedir(), fileSet.getFileList() );
-        
+
         GitRemoveConsumer consumer = new GitRemoveConsumer( getLogger() );
 
         CommandLineUtils.StringStreamConsumer stderr = new CommandLineUtils.StringStreamConsumer();
@@ -66,14 +67,20 @@ public class GitRemoveCommand extends AbstractRemoveCommand implements GitComman
         return new RemoveScmResult( cl.toString(), consumer.getRemovedFiles() );
     }
 
-    public static Commandline createCommandLine( File workingDirectory, List/*File*/ files )
-    throws ScmException
-	{
-	    Commandline cl = GitCommandLineUtils.getBaseGitCommandLine( workingDirectory, "rm" );
-	
-	    GitCommandLineUtils.addTarget( cl, files );
-	
-	    return cl;
-	}
+    private static Commandline createCommandLine( File workingDirectory, List/*File*/ files )
+        throws ScmException
+    {
+        // Base command line doesn't make sense here - username/password not needed, and non-interactive/non-recusive is not valid
+
+        Commandline cl = new Commandline();
+
+        cl.setExecutable( "git" );
+        cl.setWorkingDirectory( workingDirectory.getAbsolutePath() );
+        cl.createArgument().setValue( "remove" );
+
+        GitCommandLineUtils.addTarget( cl, files );
+
+        return cl;
+    }
 
 }
diff --git a/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/remove/GitRemoveConsumer.java b/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/remove/GitRemoveConsumer.java
index 31c1008..d1d228f 100644
--- a/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/remove/GitRemoveConsumer.java
+++ b/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/remove/GitRemoveConsumer.java
@@ -22,32 +22,22 @@ package org.apache.maven.scm.provider.git.gitexe.command.remove;
 import org.apache.maven.scm.ScmFile;
 import org.apache.maven.scm.ScmFileStatus;
 import org.apache.maven.scm.log.ScmLogger;
-import org.apache.regexp.RE;
-import org.apache.regexp.RESyntaxException;
 import org.codehaus.plexus.util.cli.StreamConsumer;
 
 import java.util.ArrayList;
 import java.util.List;
 
 /**
- * @author <a href="mailto:struberg@yahoo.de">Mark Struberg</a>
+ * @author <a href="mailto:brett@apache.org">Brett Porter</a>
+ * @version $Id: GitRemoveConsumer.java 483105 2006-12-06 15:07:54Z evenisse $
  */
-public class GitRemoveConsumer implements StreamConsumer
+public class GitRemoveConsumer
+    implements StreamConsumer
 {
-    /**
-     * The pattern used to match deleted file lines
-     */
-    private static final String REMOVED_PATTERN = "^rm\\s'(.*)'";
-
     private ScmLogger logger;
 
     private List removedFiles = new ArrayList();
 
-    /**
-     * @see #REMOVED_PATTERN
-     */
-    private RE removedRegexp;
-
     // ----------------------------------------------------------------------
     //
     // ----------------------------------------------------------------------
@@ -55,16 +45,6 @@ public class GitRemoveConsumer implements StreamConsumer
     public GitRemoveConsumer( ScmLogger logger )
     {
         this.logger = logger;
-        try
-        {
-            removedRegexp = new RE( REMOVED_PATTERN );
-        }
-        catch ( RESyntaxException ex )
-        {
-            throw new RuntimeException(
-                "INTERNAL ERROR: Could not create regexp to parse git log file. This shouldn't happen. Something is probably wrong with the oro installation.",
-                ex );
-        }        
     }
 
     // ----------------------------------------------------------------------
@@ -73,22 +53,31 @@ public class GitRemoveConsumer implements StreamConsumer
 
     public void consumeLine( String line )
     {
-        if ( line.length() <= 2 )
+        if ( line.length() <= 3 )
         {
+            logger.warn( "Unexpected input, the line must be at least three characters long. Line: '" + line + "'." );
+
             return;
         }
 
-        if ( removedRegexp.match( line ) ) 
+        String statusString = line.substring( 0, 1 );
+
+        String file = line.substring( 3 );
+
+        ScmFileStatus status;
+
+        if ( statusString.equals( "D" ) )
         {
-        	String file = removedRegexp.getParen( 1 );
-            removedFiles.add( new ScmFile( file, ScmFileStatus.DELETED ) );
+            status = ScmFileStatus.DELETED;
         }
         else
         {
-            logger.info( "could not parse line: " + line );
+            logger.info( "Unknown file status: '" + statusString + "'." );
 
             return;
         }
+
+        removedFiles.add( new ScmFile( file, status ) );
     }
 
     public List getRemovedFiles()
diff --git a/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/tag/GitTagCommand.java b/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/tag/GitTagCommand.java
index 845b0a5..2e37752 100644
--- a/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/tag/GitTagCommand.java
+++ b/maven-scm-provider-gitexe/src/main/java/org/apache/maven/scm/provider/git/gitexe/command/tag/GitTagCommand.java
@@ -20,14 +20,18 @@ package org.apache.maven.scm.provider.git.gitexe.command.tag;
  */
 
 import org.apache.maven.scm.ScmException;
+import org.apache.maven.scm.ScmFile;
 import org.apache.maven.scm.ScmFileSet;
 import org.apache.maven.scm.ScmFileStatus;
 import org.apache.maven.scm.ScmResult;
+import org.apache.maven.scm.ScmTag;
+import org.apache.maven.scm.ScmVersion;
 import org.apache.maven.scm.command.checkin.CheckInScmResult;
 import org.apache.maven.scm.command.checkout.CheckOutScmResult;
 import org.apache.maven.scm.command.tag.AbstractTagCommand;
 import org.apache.maven.scm.command.tag.TagScmResult;
 import org.apache.maven.scm.provider.ScmProviderRepository;
+import org.apache.maven.scm.provider.git.GitCommandUtils;
 import org.apache.maven.scm.provider.git.command.GitCommand;
 import org.apache.maven.scm.provider.git.repository.GitScmProviderRepository;
 import org.apache.maven.scm.provider.git.gitexe.command.GitCommandLineUtils;
@@ -35,11 +39,15 @@ import org.apache.maven.scm.provider.git.gitexe.command.list.GitListCommand;
 import org.apache.maven.scm.provider.git.gitexe.command.list.GitListConsumer;
 import org.codehaus.plexus.util.FileUtils;
 import org.codehaus.plexus.util.StringUtils;
+import org.codehaus.plexus.util.cli.CommandLineException;
 import org.codehaus.plexus.util.cli.CommandLineUtils;
 import org.codehaus.plexus.util.cli.Commandline;
 
 import java.io.File;
 import java.io.IOException;
+import java.util.ArrayList;
+import java.util.Iterator;
+import java.util.List;
 
 /**
  * @author <a href="mailto:struberg@yahoo.de">Mark Struberg</a>
@@ -51,7 +59,7 @@ public class GitTagCommand extends AbstractTagCommand implements GitCommand
     {
         if ( tag == null || StringUtils.isEmpty( tag.trim() ) )
         {
-            throw new ScmException( "tag name must be specified" );
+            throw new ScmException( "tag must be specified" );
         }
 
         if ( !fileSet.getFileList().isEmpty() )
@@ -87,7 +95,7 @@ public class GitTagCommand extends AbstractTagCommand implements GitCommand
             exitCode = GitCommandLineUtils.execute( clTag, stdout, stderr, getLogger() );
             if ( exitCode != 0 )
             {
-                return new TagScmResult( clTag.toString(), "The git-tag command failed.", stderr.getOutput(), false );
+                return new CheckInScmResult( clTag.toString(), "The git-tag command failed.", stderr.getOutput(), false );
             }
 
             // and now push the tag to the origin repository
@@ -96,13 +104,11 @@ public class GitTagCommand extends AbstractTagCommand implements GitCommand
             exitCode = GitCommandLineUtils.execute( clPush, stdout, stderr, getLogger() );
             if ( exitCode != 0 )
             {
-                return new TagScmResult( clPush.toString(), "The git-push command failed.", stderr.getOutput(), false );
+                return new CheckInScmResult( clPush.toString(), "The git-push command failed.", stderr.getOutput(), false );
             }
 
-            // plus search for the tagged files
-            GitListConsumer listConsumer = new GitListConsumer( getLogger()
-            		                                          , fileSet.getBasedir()
-            		                                          , ScmFileStatus.TAGGED );
+            // and now search for the tagged files
+            GitListConsumer listConsumer = new GitListConsumer( getLogger(), fileSet.getBasedir() );
 
             Commandline clList = GitListCommand.createCommandLine( repository, fileSet.getBasedir() );
             
@@ -153,6 +159,8 @@ public class GitTagCommand extends AbstractTagCommand implements GitCommand
           Commandline cl = GitCommandLineUtils.getBaseGitCommandLine( fileSet.getBasedir(), "push");
 
           cl.createArgument().setValue( "origin" );
+
+          
           cl.createArgument().setValue( tag );
           
           return cl;
diff --git a/maven-scm-provider-gitexe/src/test/java/org/apache/maven/scm/provider/git/gitexe/command/branch/GitExeBranchCommandTckTest.java b/maven-scm-provider-gitexe/src/test/java/org/apache/maven/scm/provider/git/gitexe/command/branch/GitExeBranchCommandTckTest.java
deleted file mode 100644
index d6f1288..0000000
--- a/maven-scm-provider-gitexe/src/test/java/org/apache/maven/scm/provider/git/gitexe/command/branch/GitExeBranchCommandTckTest.java
+++ /dev/null
@@ -1,30 +0,0 @@
-package org.apache.maven.scm.provider.git.gitexe.command.branch;
-
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied.  See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-
-import org.apache.maven.scm.provider.git.command.branch.GitBranchCommandTckTest;
-
-/**
- * @author <a href="mailto:struberg@yahoo.de">Mark Struberg</a>
- */
-public class GitExeBranchCommandTckTest
-    extends GitBranchCommandTckTest
-{
-}
diff --git a/maven-scm-provider-gitexe/src/test/java/org/apache/maven/scm/provider/git/gitexe/command/remove/GitRemoveConsumerTest.java b/maven-scm-provider-gitexe/src/test/java/org/apache/maven/scm/provider/git/gitexe/command/remove/GitRemoveConsumerTest.java
deleted file mode 100644
index 3bffc25..0000000
--- a/maven-scm-provider-gitexe/src/test/java/org/apache/maven/scm/provider/git/gitexe/command/remove/GitRemoveConsumerTest.java
+++ /dev/null
@@ -1,103 +0,0 @@
-package org.apache.maven.scm.provider.git.gitexe.command.remove;
-
-/*
- * Licensed to the Apache Software Foundation (ASF) under one
- * or more contributor license agreements.  See the NOTICE file
- * distributed with this work for additional information
- * regarding copyright ownership.  The ASF licenses this file
- * to you under the Apache License, Version 2.0 (the
- * "License"); you may not use this file except in compliance
- * with the License.  You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- * KIND, either express or implied.  See the License for the
- * specific language governing permissions and limitations
- * under the License.
- */
-
-import org.apache.maven.scm.ScmFile;
-import org.apache.maven.scm.ScmFileStatus;
-import org.apache.maven.scm.log.DefaultLog;
-import org.apache.maven.scm.provider.git.gitexe.command.remove.GitRemoveConsumer;
-import org.codehaus.plexus.PlexusTestCase;
-
-import java.io.BufferedReader;
-import java.io.File;
-import java.io.FileReader;
-import java.util.List;
-
-/**
- * @author <a href="mailto:struberg@yahoo.de">Mark Struberg</a>
- */
-public class GitRemoveConsumerTest
-    extends PlexusTestCase
-{
-    
-    public void testConsumerRemovedFile() 
-    {
-        GitRemoveConsumer consumer = new GitRemoveConsumer( new DefaultLog() );
-        
-        consumer.consumeLine( "rm 'project.xml'" );
-        
-        List changedFiles = consumer.getRemovedFiles();
-        
-        assertNotNull( changedFiles );
-        assertEquals( 1, changedFiles.size() );
-    }
-    
-    public void testLog1Consumer()
-    throws Exception
-    {
-        GitRemoveConsumer consumer = new GitRemoveConsumer( new DefaultLog() );
-
-        File f = getTestFile( "/src/test/resources/git/remove/gitrm.log" );
-
-        BufferedReader r = new BufferedReader( new FileReader( f ) );
-
-        String line;
-
-        while ( ( line = r.readLine() ) != null )
-        {
-            consumer.consumeLine( line );
-        }
-
-        List changedFiles = consumer.getRemovedFiles();
-        
-        assertEquals( 2, changedFiles.size() );
-
-        testScmFile( (ScmFile) changedFiles.get( 0 ), "src/main/java/Application.java", ScmFileStatus.DELETED );
-        testScmFile( (ScmFile) changedFiles.get( 1 ), "src/test/java/Test.java" , ScmFileStatus.DELETED );
-    }
- 
-    public void testEmptyLogConsumer()
-    throws Exception
-    {
-        GitRemoveConsumer consumer = new GitRemoveConsumer( new DefaultLog() );
-
-        File f = getTestFile( "/src/test/resources/git/remove/gitrm-empty.log" );
-
-        BufferedReader r = new BufferedReader( new FileReader( f ) );
-
-        String line;
-
-        while ( ( line = r.readLine() ) != null )
-        {
-            consumer.consumeLine( line );
-        }
-
-        List changedFiles = consumer.getRemovedFiles();
-        
-        assertEquals( 0, changedFiles.size() );
-   }    
-    
-    private void testScmFile( ScmFile fileToTest, String expectedFilePath, ScmFileStatus expectedStatus )
-    {
-        assertEquals( expectedFilePath, fileToTest.getPath() );
-        assertEquals( expectedStatus, fileToTest.getStatus() );
-    }
- 
-}
\ No newline at end of file
diff --git a/maven-scm-provider-gitexe/src/test/resources/git/remove/gitrm-empty.log b/maven-scm-provider-gitexe/src/test/resources/git/remove/gitrm-empty.log
deleted file mode 100644
index e69de29..0000000
diff --git a/maven-scm-provider-gitexe/src/test/resources/git/remove/gitrm.log b/maven-scm-provider-gitexe/src/test/resources/git/remove/gitrm.log
deleted file mode 100644
index 42491f5..0000000
--- a/maven-scm-provider-gitexe/src/test/resources/git/remove/gitrm.log
+++ /dev/null
@@ -1,3 +0,0 @@
-rm 'src/main/java/Application.java'
-rm 'src/test/java/Test.java'
-
